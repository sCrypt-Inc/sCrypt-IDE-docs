# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sCrypt.Inc
# This file is distributed under the same license as the sCrypt-IDE-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: sCrypt-IDE-docs 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-02 16:14+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../compiling.rst:5
msgid "编译"
msgstr "编译"

#: ../../compiling.rst:7
msgid "**sCrypt IDE** 支持在代码编辑器/资源管理器上下文菜单中编译合约文件。"
msgstr "**sCrypt IDE** 支持在代码编辑器/资源管理器上下文菜单中编译合约文件。"

#: ../../compiling.rst:12
msgid ""
"编译完成后，在vscode 窗口的右下角会有 **通知** ，同时 **输出面板** 也会输出编译结果，包括编译的合约文件名，编译出来的脚本大小 "
"[1]_， 合约描述文件存放路径。"
msgstr ""
"编译完成后，在vscode 窗口的右下角会有 **通知** ，同时 **输出面板** 也会输出编译结果，包括编译的合约文件名，编译出来的脚本大小 "
"[1]_， 合约描述文件存放路径。"

#: ../../compiling.rst:18
msgid "合约描述文件"
msgstr "合约描述文件"

#: ../../compiling.rst:21
msgid ""
"合约描述文件（ * *_desc.json* 文件）是编译合约的输出结果，可用于测试合约、部署、调用和集成合约。 这是一个示例合约描述文件 desc_。"
msgstr ""
"合约描述文件（ * *_desc.json* 文件）是编译合约的输出结果，可用于测试合约、部署、调用和集成合约。 这是一个示例合约描述文件 desc_。"

#: ../../compiling.rst:24
msgid "主要字段说明"
msgstr "主要字段说明"

#: ../../compiling.rst:28
msgid "字段"
msgstr "字段"

#: ../../compiling.rst:28
msgid "说明"
msgstr "说明"

#: ../../compiling.rst:30
msgid "version"
msgstr "version"

#: ../../compiling.rst:30
msgid "合约描述文件版本号，版本修改记录 VERSIONLOG_"
msgstr "合约描述文件版本号，版本修改记录 VERSIONLOG_"

#: ../../compiling.rst:31
msgid "compilerVersion"
msgstr "compilerVersion"

#: ../../compiling.rst:31
msgid "编译合约时使用的 sCrypt 编译器版本号"
msgstr "编译合约时使用的 sCrypt 编译器版本号"

#: ../../compiling.rst:32
msgid "contract"
msgstr "contract"

#: ../../compiling.rst:32
msgid "合约名称"
msgstr "合约名称"

#: ../../compiling.rst:33
msgid "md5"
msgstr "md5"

#: ../../compiling.rst:33
msgid "合约源代码 md5"
msgstr "合约源代码 md5"

#: ../../compiling.rst:34
msgid "buildTypes"
msgstr "buildTypes"

#: ../../compiling.rst:34
msgid "合约描述文件的构建类型 ``debug`` 或者 ``release``"
msgstr "合约描述文件的构建类型 ``debug`` 或者 ``release``"

#: ../../compiling.rst:35
msgid "structs"
msgstr "structs"

#: ../../compiling.rst:35
msgid "合约中定义的结构体"
msgstr "合约中定义的结构体"

#: ../../compiling.rst:36
msgid "alias"
msgstr "alias"

#: ../../compiling.rst:36
msgid "合约中定义的别名"
msgstr "合约中定义的别名"

#: ../../compiling.rst:37
msgid "abi"
msgstr "abi"

#: ../../compiling.rst:37
msgid "合约接口，合约中所有 ``public`` 方法的描述"
msgstr "合约接口，合约中所有 ``public`` 方法的描述"

#: ../../compiling.rst:38
msgid "file"
msgstr "file"

#: ../../compiling.rst:38
msgid "合约源代码路径"
msgstr "合约源代码路径"

#: ../../compiling.rst:39
msgid "asm"
msgstr "asm"

#: ../../compiling.rst:39
msgid "合约编译出来的比特币脚本"
msgstr "合约编译出来的比特币脚本"

#: ../../compiling.rst:40
msgid "sources"
msgstr "sources"

#: ../../compiling.rst:40
msgid "合约包含的所有源代码"
msgstr "合约包含的所有源代码"

#: ../../compiling.rst:41
msgid "sourceMap"
msgstr "sourceMap"

#: ../../compiling.rst:41
msgid "sourceMap 主要用于 debug 调试，发布编译没有sourceMap信息， 调试编译才有内容"
msgstr "sourceMap 主要用于 debug 调试，发布编译没有sourceMap信息， 调试编译才有内容"

#: ../../compiling.rst:48
msgid "调试编译"
msgstr "调试编译"

#: ../../compiling.rst:50
msgid "*在代码编辑器上右键单击，选择* : ``Compile to Bitcoin Script : Debug``"
msgstr "*在代码编辑器上右键单击，选择* : ``Compile to Bitcoin Script : Debug``"

#: ../../compiling.rst:52
msgid ""
"在开发过程中我们主要使用调试编译来构建合约，包括调试器、单元测试，甚至部署调用合约也使用此构建类型。在该构建类型下， "
"编译器生成的脚本可能包含辅助信息，不包含优化，编译结果包含 ``sourceMap``， 可以用于调试定位异常。"
msgstr ""
"在开发过程中我们主要使用调试编译来构建合约，包括调试器、单元测试，甚至部署调用合约也使用此构建类型。在该构建类型下， "
"编译器生成的脚本可能包含辅助信息，不包含优化，编译结果包含 ``sourceMap``， 可以用于调试定位异常。"

#: ../../compiling.rst:58
msgid "发布编译"
msgstr "发布编译"

#: ../../compiling.rst:60
msgid "*在代码编辑器上右键单击，选择* : ``Compile to Bitcoin Script : Release``"
msgstr "*在代码编辑器上右键单击，选择* : ``Compile to Bitcoin Script : Release``"

#: ../../compiling.rst:62
msgid ""
"当一切准备就绪之后，我们应该使用发布编译来构建你的合约。在该构建类型下， 编译器会 :ref:`优化生成 <optimize>` "
"的脚本，删除辅助信息，从而使脚本会变得更小，节省您的交易手续费。 目前只有我们的付费用户才能使用此功能，请参阅 :ref:`高级付费功能 "
"<premium>`"
msgstr ""
"当一切准备就绪之后，我们应该使用发布编译来构建你的合约。在该构建类型下， 编译器会 :ref:`优化生成 <optimize>` "
"的脚本，删除辅助信息，从而使脚本会变得更小，节省您的交易手续费。 目前只有我们的付费用户才能使用此功能，请参阅 :ref:`高级付费功能 "
"<premium>`"

#: ../../compiling.rst:68
msgid ""
"不版本的编译器编译出来的脚本可能会不一样，但是脚本是等价。如果编译出来的脚本发生变化了，通常会导致旧的的 **交易原象** "
"无法校验通过，通过计算一个新的 **交易原象** 即可修复此问题。"
msgstr ""
"不版本的编译器编译出来的脚本可能会不一样，但是脚本是等价。如果编译出来的脚本发生变化了，通常会导致旧的的 **交易原象** "
"无法校验通过，通过计算一个新的 **交易原象** 即可修复此问题。"

#: ../../compiling.rst:72
msgid "改大小计算方式不包含合约构造函数参数"
msgstr "改大小计算方式不包含合约构造函数参数"
