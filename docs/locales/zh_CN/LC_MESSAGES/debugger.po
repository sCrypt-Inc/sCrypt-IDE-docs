# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sCrypt.Inc
# This file is distributed under the same license as the sCrypt-IDE-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: sCrypt-IDE-docs 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-07 17:32+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../debugger.rst:5 9c61f92ccd7641aaa72e6de1fb70dfed
msgid "调试器"
msgstr "调试器"

#: ../../debugger.rst:7 3f03d43759dc4a63865fee36721a070a
msgid ""
"**IDE** 自带一个功能强大的调试器。可以用它来调试 ``.scrypt`` 源代码。如果购买了高级付费功能，还可以用它来进行脚本级别的调试。 "
"并非所有合约都可以编写完成后就会按照预期行事，当它发生错误时，可能需要盯着代码看好几个小时，一个好调试器可以让你更轻松且更高效地解决问题。 "
"当调试合约时，调试器提供许多方法让你查看代码的情况，比如逐步执行代码、查看变量中存储的值、查看函数的调用栈、查看比特币双堆栈中的数据、代码的执行路径等。"
msgstr ""
"**IDE** 自带一个功能强大的调试器。可以用它来调试 ``.scrypt`` 源代码。如果购买了高级付费功能，还可以用它来进行脚本级别的调试。 "
"并非所有合约都可以编写完成后就会按照预期行事，当它发生错误时，可能需要盯着代码看好几个小时，一个好调试器可以让你更轻松且更高效地解决问题。 "
"当调试合约时，调试器提供许多方法让你查看代码的情况，比如逐步执行代码、查看变量中存储的值、查看函数的调用栈、查看比特币双堆栈中的数据、代码的执行路径等。"

#: ../../debugger.rst:14 964e58674c8f44d3b783743b9323f134
msgid "配置启动参数"
msgstr "配置启动参数"

#: ../../debugger.rst:16 de539231b43e458eb07f02e47a691595
msgid ""
"与一般语言（比如C++/Javascript)不同， 启动 **IDE** 的 debugger 必须配置启动参数。这是 **sCrypt** "
"语言的结构特性决定的，如下图： 我们知道比特币脚本的执行是将解锁脚本和锁定脚本连接起来形成完整的脚本后再执行， 其中解锁脚本在前，锁定脚本在后。 "
"**sCrypt** 合约含有一个或者多个 *public* 函数， 启动调试器就是运行合约的某一个 *public* 函数，函数的参数对应解锁脚本， "
"函数的内容对应锁定脚本。 运行这个函数，需要按照这个函数的签名来正确的配置调用函数的参数，也就是解锁脚本。"
msgstr ""
"与一般语言（比如C++/Javascript)不同， 启动 **IDE** 的 debugger 必须配置启动参数。这是 **sCrypt** "
"语言的结构特性决定的，如下图： 我们知道比特币脚本的执行是将解锁脚本和锁定脚本连接起来形成完整的脚本后再执行， 其中解锁脚本在前，锁定脚本在后。 "
"**sCrypt** 合约含有一个或者多个 *public* 函数， 启动调试器就是运行合约的某一个 *public* 函数，函数的参数对应解锁脚本， "
"函数的内容对应锁定脚本。 运行这个函数，需要按照这个函数的签名来正确的配置调用函数的参数，也就是解锁脚本。"

#: ../../debugger.rst:25 9950f293810e4f99944f2e538e265e13
msgid "创建launch.json"
msgstr "创建launch.json"

#: ../../debugger.rst:26 0330d4afe3c24c7fb81a6c93e8bbfaa0
msgid "打开调试视图，如果当前工作区没有创建 **launch.json** ，会提示你创建 **launch.json** 文件。"
msgstr "打开调试视图，如果当前工作区没有创建 **launch.json** ，会提示你创建 **launch.json** 文件。"

#: ../../debugger.rst:33 9c139d438cb24746ab03b930ff3b00e6
msgid "下面是一个调试 `p2pkh`_ 合约的示例配置："
msgstr "下面是一个调试 `p2pkh`_ 合约的示例配置："

#: ../../debugger.rst:59 b6dfcda782a44ef7917315ffe5a76f77
msgid "配置项说明"
msgstr "配置项说明"

#: ../../debugger.rst:62 26191b97820d4e47a5baa17795eb94a9
msgid "配置项"
msgstr "配置项"

#: ../../debugger.rst:62 ../../debugger.rst:111
#: e34c2721661541eaad7f593c047dfc64 cc0ccc6cf99a4a0e8e565c849251167a
msgid "必须"
msgstr "必须"

#: ../../debugger.rst:62 ../../debugger.rst:111
#: c0fe0ef368fe42d1adadd7f0500d6adb 9eb3550efd90487da7b8ce42ec39b170
msgid "说明"
msgstr "说明"

#: ../../debugger.rst:64 474415a2778e46ae9dba6b246b74c8d2
msgid "type"
msgstr "type"

#: ../../debugger.rst:64 ../../debugger.rst:65 ../../debugger.rst:66
#: ../../debugger.rst:67 ../../debugger.rst:68 ../../debugger.rst:69
#: ../../debugger.rst:70 ../../debugger.rst:113 ../../debugger.rst:114
#: ../../debugger.rst:115 07617f6a58d3486e96a0ca9ea6718278
#: c075d85fb98440c8ae7378e2e7941fa0 7251482ea938493ea267d5e56f810f19
#: dd3b6c0737434e7eb37c0974bc3d8daf 2fdfb050a8d140cabd9a28fe80c7fc31
#: 20bbe5cf55ca4a18a813502a57635fe5 895392e926e74d5d83d4e4d50cd1e5c6
#: cf2e5b1fa9fd47849abc978ab60867d4 0291ecb4820049a8baa518dbf3cad54b
#: 1a246baf419f46a48b57eda52982ca40
msgid "是"
msgstr "是"

#: ../../debugger.rst:64 13dc5ee62a344d07a33c764001135ab6
msgid "配置类型，固定为 ``scrypt``"
msgstr "配置类型，固定为 ``scrypt``"

#: ../../debugger.rst:65 04b6a84851f644b28465d0869d1a42b4
msgid "request"
msgstr "request"

#: ../../debugger.rst:65 3c005859b8cb4ccf83bd249d0dea2ae7
msgid "调试器启动类型，只支持 ``launch`` 模式"
msgstr "调试器启动类型，只支持 ``launch`` 模式"

#: ../../debugger.rst:66 e0cb970d0bb445ee951eba33ac6f6685
msgid "name"
msgstr "name"

#: ../../debugger.rst:66 649e5531fe5d4ce38d5c113d7eaefeca
msgid "配置名称"
msgstr "配置名称"

#: ../../debugger.rst:67 c612f726412848a2999a143ba1531d6d
msgid "program"
msgstr "program"

#: ../../debugger.rst:67 1397887ccbcc46caa58397c43b75364f
msgid "要调试的源代码文件，可以使用VS Code的工作区代号 ``${workspaceFolder}``，也可以使用绝对路径"
msgstr "要调试的源代码文件，可以使用VS Code的工作区代号 ``${workspaceFolder}``，也可以使用绝对路径"

#: ../../debugger.rst:68 34416957a1334e4f8afc5b0eb2ddfc80
msgid "constructorArgs"
msgstr "constructorArgs"

#: ../../debugger.rst:68 4122dcba583d46e5958ddec45029863e
msgid "合约的构造参数"
msgstr "合约的构造参数"

#: ../../debugger.rst:69 447e256eb31b44de996e55248a0422c1
msgid "pubFunc"
msgstr "pubFunc"

#: ../../debugger.rst:69 339f2ea82b1c4debaf4ad2c39f521be3
msgid "要调试的 *public* 函数名称"
msgstr "要调试的 *public* 函数名称"

#: ../../debugger.rst:70 7ed64863cf1b4a49a4deb6e9429a9685
msgid "pubFuncArgs"
msgstr "pubFuncArgs"

#: ../../debugger.rst:70 2fb1675cf45245cfb5ff7fc34e3f434e
msgid "要调试的 *public* 函数的参数"
msgstr "要调试的 *public* 函数的参数"

#: ../../debugger.rst:71 d4622241e1144d6693d99acf676e23ca
msgid "txContext"
msgstr "txContext"

#: ../../debugger.rst:71 ../../debugger.rst:72 ../../debugger.rst:116
#: bb774190c9fc44d38f47b87ad9db5124 6decb84a486e42d18683680ac7f9b29d
#: 0f0e9096a3eb42f8af26766c4f5eb063
msgid "否"
msgstr "否"

#: ../../debugger.rst:71 767cd3839d5941089f1cf10008769417
msgid "运行函数所需的 :ref:`交易上下文 <txContext>`"
msgstr "运行函数所需的 :ref:`交易上下文 <txContext>`"

#: ../../debugger.rst:72 b1df2cd7c2ff4fcb99c301251cafbb66
msgid "asmArgs"
msgstr "asmArgs"

#: ../../debugger.rst:72 15a85291ebc4405abb6f55d5c3018a27
msgid "`汇编变量`_"
msgstr "`汇编变量`_"

#: ../../debugger.rst:78 3ebb878a05a846fb90b32372993331ae
msgid "参数输入格式"
msgstr "参数输入格式"

#: ../../debugger.rst:81 d0cf5cf9caa54e7ab4517fc7f565592c
msgid "参数类型"
msgstr "参数类型"

#: ../../debugger.rst:81 3daf29a8284f4335ba3441c635abe7d8
msgid "输入格式说明"
msgstr "输入格式说明"

#: ../../debugger.rst:83 e6439e2ed7cd40ec921c13c9050243b1
msgid "bool"
msgstr "bool"

#: ../../debugger.rst:83 9566d25087de46d1a3ff6ac9b205f4ab
msgid "``true`` 或者 ``false``"
msgstr "``true`` 或者 ``false``"

#: ../../debugger.rst:84 e31aba42793d47cbb8a55daffa317acc
msgid "int"
msgstr "int"

#: ../../debugger.rst:84 896e9a3eb05e4fd29ee6fd8bd4383cfc
msgid ""
"数字或字符串，如果值小于 ``9007199254740991`` (2^53 − 1)， 可以直接使用数字表示，也可以使用字符串表示（包括十进制 "
"字符串和 ``0x`` 开头的十六进制字符串），如果值大于等于 ``9007199254740991``，应该使用字符串表示"
msgstr ""
"数字或字符串，如果值小于 ``9007199254740991`` (2^53 − 1)， 可以直接使用数字表示，也可以使用字符串表示（包括十进制 "
"字符串和 ``0x`` 开头的十六进制字符串），如果值大于等于 ``9007199254740991``，应该使用字符串表示"

#: ../../debugger.rst:86 fc54191e325c4fdf98295f61e1d513b1
msgid "bytes"
msgstr "bytes"

#: ../../debugger.rst:86 8e2e8424014a416089c3ef19d1ad96bc
msgid "字符串, 例如: ``\"b'0011'\"``"
msgstr "字符串, 例如: ``\"b'0011'\"``"

#: ../../debugger.rst:87 8b8b1920cf364d008561364eb46392cd
msgid "PubKey"
msgstr "PubKey"

#: ../../debugger.rst:87 f7b5e11459514bd5abe842f6e00fba39
msgid ""
"字符串, 例如: "
"``\"PubKey(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``，括号中间是"
" *bytes*"
msgstr ""
"字符串, 例如: "
"``\"PubKey(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``，括号中间是"
" *bytes*"

#: ../../debugger.rst:89 7fbebea8eecc499688e5a7db578f0028
msgid "PrivKey"
msgstr "PrivKey"

#: ../../debugger.rst:89 e864a71ff18849fba7a3b503f44ecf80
msgid ""
"字符串, 例如: ``\"PrivKey(1000000000000)\"`` or ``\"PrivKey(0x036cfa9a)\"``, "
"括号中间是十进制或十六进制数字"
msgstr ""
"字符串, 例如: ``\"PrivKey(1000000000000)\"`` or ``\"PrivKey(0x036cfa9a)\"``, "
"括号中间是十进制或十六进制数字"

#: ../../debugger.rst:90 dfc42ce17e364d19b877a09856ec9598
msgid "Sig"
msgstr "Sig"

#: ../../debugger.rst:90 0d293d566ab94a99bfa563659aa25f4e
msgid ""
"字符串, 例如: "
"``\"Sig(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``，括号中间是"
" *bytes*"
msgstr ""
"字符串, 例如: "
"``\"Sig(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``，括号中间是"
" *bytes*"

#: ../../debugger.rst:91 ee9b0260d56744359abc58fc1dfb31c2
msgid "Ripemd160"
msgstr "Ripemd160"

#: ../../debugger.rst:91 34f1ead6c8b7469986ce1ef379b16899
msgid ""
"字符串, 例如: "
"``\"Ripemd160(b'ba53f598a150a242b21bcb6963a2db6dae6fa896')\"``，括号中间是 *bytes*"
msgstr ""
"字符串, 例如: "
"``\"Ripemd160(b'ba53f598a150a242b21bcb6963a2db6dae6fa896')\"``，括号中间是 *bytes*"

#: ../../debugger.rst:92 2febd5bbc6fa42dab9ba8d9f243a7787
msgid "Sha1"
msgstr "Sha1"

#: ../../debugger.rst:92 7bff790a4f824cd48bfef8d919d9b59f
msgid ""
"字符串, 例如: ``\"Sha1(b'3e5b01787918c4e39f99ee70d7db11dddb1cc98d')\"``，括号中间是 "
"*bytes*"
msgstr ""
"字符串, 例如: ``\"Sha1(b'3e5b01787918c4e39f99ee70d7db11dddb1cc98d')\"``，括号中间是 "
"*bytes*"

#: ../../debugger.rst:93 05aa138d787c4647a21d3f5750b463b3
msgid "Sha256"
msgstr "Sha256"

#: ../../debugger.rst:93 9eb8f37dbe1e49969712d77f7209fb36
msgid ""
"字符串, 例如: "
"``\"Sha256(b'5a3d057ba410db21e6e92788779e6262a83d0a305762d5ece77dc801c6242f70')\"``，括号中间是"
" *bytes*"
msgstr ""
"字符串, 例如: "
"``\"Sha256(b'5a3d057ba410db21e6e92788779e6262a83d0a305762d5ece77dc801c6242f70')\"``，括号中间是"
" *bytes*"

#: ../../debugger.rst:94 3eceb22638f444b691148014d9fc1e79
msgid "SigHashType"
msgstr "SigHashType"

#: ../../debugger.rst:94 ec880fbefca84ca1a4654300d4168d84
msgid "字符串, 例如: ``\"SigHashType(b'4c')\"``，括号中间是 *bytes*"
msgstr "字符串, 例如: ``\"SigHashType(b'4c')\"``，括号中间是 *bytes*"

#: ../../debugger.rst:95 04e7de5b073c445ca60176f34e80c297
msgid "SigHashPreimage"
msgstr "SigHashPreimage"

#: ../../debugger.rst:95 17de0d122dd74146980fb929ae856e19
msgid ""
"字符串, 例如: "
"``\"SigHashPreimage(b'0100000028bcef7e73248aa273db19d73f65730862b2491c8e0eeb767f7fbd78c4...')\"``，括号中间是"
" *bytes*"
msgstr ""
"字符串, 例如: "
"``\"SigHashPreimage(b'0100000028bcef7e73248aa273db19d73f65730862b2491c8e0eeb767f7fbd78c4...')\"``，括号中间是"
" *bytes*"

#: ../../debugger.rst:96 63ec0dca0d2948ef9a0c1e38951a2104
msgid "OpCodeType"
msgstr "OpCodeType"

#: ../../debugger.rst:96 b4cc09fb9a6342ab927570f2f50fa649
msgid "字符串, 例如: ``\"OpCodeType(b'81')\"`` 表示 OP_1， 更多 `Opcodes`_ ，括号中间是 *bytes*"
msgstr "字符串, 例如: ``\"OpCodeType(b'81')\"`` 表示 OP_1， 更多 `Opcodes`_ ，括号中间是 *bytes*"

#: ../../debugger.rst:99 17b26ca862084cc4a4647d49efb62c7d
msgid "数组"
msgstr "数组"

#: ../../debugger.rst:99 8f72e1ec06784c4e9a2674d1522f35a2
msgid "同 *JSON* 的数组，所有元素必须是以上基本类型或者是结构体、数组"
msgstr "同 *JSON* 的数组，所有元素必须是以上基本类型或者是结构体、数组"

#: ../../debugger.rst:100 63e313f519344dbf8e9d4e399fb9978f
msgid "结构体"
msgstr "结构体"

#: ../../debugger.rst:100 66e7593d38e14f57b8746ec346a64192
msgid "同 *JSON* 的对象，所有成员必须是以上基本类型或者是结构体、数组"
msgstr "同 *JSON* 的对象，所有成员必须是以上基本类型或者是结构体、数组"

#: ../../debugger.rst:106 cc471bf9fea24fb2868d93b2a5ea898d
msgid "交易上下文"
msgstr "交易上下文"

#: ../../debugger.rst:108 b7d3720d21fc4890aa5f5a025c4fee83
msgid ""
"交易上下文，即 **txContext** "
"参数，指定调试时当前交易的相关上下文信息，仅当在合约内进行签名或者原象校验时才需要。缺少会导致调试器无法进行校验。"
msgstr ""
"交易上下文，即 **txContext** "
"参数，指定调试时当前交易的相关上下文信息，仅当在合约内进行签名或者原象校验时才需要。缺少会导致调试器无法进行校验。"

#: ../../debugger.rst:111 66dc651482fb4d6abbae7e58b515a266
msgid "字段"
msgstr "字段"

#: ../../debugger.rst:113 c0f4f40cf6424846b23751f70949460d
msgid "hex"
msgstr "hex"

#: ../../debugger.rst:113 5aaa78c7f45b4708988723d38fcedfb4
msgid "序列化的当前交易，即解锁脚本所在交易。可以是签名过的，也可以是未签名的"
msgstr "序列化的当前交易，即解锁脚本所在交易。可以是签名过的，也可以是未签名的"

#: ../../debugger.rst:114 f8664f04172f475aab9a4221a7d43dd3
msgid "inputIndex"
msgstr "inputIndex"

#: ../../debugger.rst:114 70da079cd56349aaa027536d84ee4cb2
msgid "要花费的、被合约锁定的 UTXO 所对应的 input 索引"
msgstr "要花费的、被合约锁定的 UTXO 所对应的 input 索引"

#: ../../debugger.rst:115 7ca13cee45404d95a541b3329cb7c304
msgid "inputSatoshis"
msgstr "inputSatoshis"

#: ../../debugger.rst:115 b951f24ddc15493e896b482001c48edd
msgid "要花费的、被合约锁定的 UTXO 中比特币数量，单位 *satoshis*"
msgstr "要花费的、被合约锁定的 UTXO 中比特币数量，单位 *satoshis*"

#: ../../debugger.rst:116 a899e757793c4591909d259a78dd46e5
msgid "opReturn"
msgstr "opReturn"

#: ../../debugger.rst:116 57be030f3123444db7ff6b43cb098174
msgid "带状态合约的状态，从OP_RETURN开始，不包含OP_RETURN"
msgstr "带状态合约的状态，从OP_RETURN开始，不包含OP_RETURN"

#: ../../debugger.rst:121 dd97fbf377394aada3a61740c6cab4b3
msgid "了解校验签名是如何运作的: `CHECKSIG`_"
msgstr "了解校验签名是如何运作的: `CHECKSIG`_"

#: ../../debugger.rst:125 28f242de3d9844898f62524e7f94b526
msgid "启动调试器"
msgstr "启动调试器"

#: ../../debugger.rst:127 4a424456bc934744a5d9a26db4df7dfe
msgid "启动调试器有4种方法："
msgstr "启动调试器有4种方法："

#: ../../debugger.rst:130 0c8031d2557947b3a8b538840d32c04b
msgid "1. 通过 **F5** 启动"
msgstr "1. 通过 **F5** 启动"

#: ../../debugger.rst:132 b9aedceaa2d942c5b2adf38051491710
msgid ""
"通过 **F5** 启动，需要先创建 好launch.json "
"并配置好启动参数。也可以通过调试视图的调试按钮来启动调试器。这是也是其它调试器最常见的启动方式。"
msgstr ""
"通过 **F5** 启动，需要先创建 好launch.json "
"并配置好启动参数。也可以通过调试视图的调试按钮来启动调试器。这是也是其它调试器最常见的启动方式。"

#: ../../debugger.rst:138 0602aeb16b4c474eb99f7108d6979593
msgid "2. 通过 :ref:`单元测试 <Launch_Debugger_Link>` 启动"
msgstr "2. 通过 :ref:`单元测试 <Launch_Debugger_Link>` 启动"

#: ../../debugger.rst:141 285626eb8d444659b86add9ecac15d09
msgid "3. 通过 :ref:`Launch Debugger 命令 <Launch_Debugger_Command>` 启动"
msgstr "3. 通过 :ref:`Launch Debugger 命令 <Launch_Debugger_Command>` 启动"

#: ../../debugger.rst:144 6e9ad45cf22241aeaaa980395f79ad78
msgid "4. 通过 **Launch Debugger from TxContext** 命令 启动"
msgstr "4. 通过 **Launch Debugger from TxContext** 命令 启动"

#: ../../debugger.rst:146 4bcf5001c9fd4b49b7447e7c481772dc
msgid ""
"**Launch Debugger from TxContext** 命令会打开一个调试器启动视图。允许你通过输入交易的 ``id`` 或者完整交易来 "
"``rawTx`` 来调试合约。 "
"你还可以选择调试主网或测试网上的交易，或者选择调试交易的哪一个输入，以及选择自动生成合约源代码或是附加一个已有的合约源码。自动生成的合约源码只包含 "
"`内联汇编`_。 如果附加的合约源代码不正确，则会选择自动生成合约源代码。"
msgstr ""
"**Launch Debugger from TxContext** 命令会打开一个调试器启动视图。允许你通过输入交易的 ``id`` 或者完整交易来 "
"``rawTx`` 来调试合约。 "
"你还可以选择调试主网或测试网上的交易，或者选择调试交易的哪一个输入，以及选择自动生成合约源代码或是附加一个已有的合约源码。自动生成的合约源码只包含 "
"`内联汇编`_。 如果附加的合约源代码不正确，则会选择自动生成合约源代码。"

#: ../../debugger.rst:156 56ae9c9a3d26431ea009e622d76f14ab
msgid "视频介绍： `4 种启动调试器的方法`_"
msgstr "视频介绍： `4 种启动调试器的方法`_"

#: ../../debugger.rst:161 05032b2c25fa4e68b741b0ca54a6632d
msgid "设置断点"
msgstr "设置断点"

#: ../../debugger.rst:164 bda139a63edd459cb5ec0e5ea5c7b4cc
msgid ""
"在启动调试器之前，首先设置断点。断点是可靠调试的最基本和最重要的功能，若代码编辑器中打开了文件，则可通过单击代码行左侧的边缘来设置断点，或者按 "
"**F9**。 接下来按 **F5** 或者 点击 **运行和调式** 侧边栏面板中的“开始调试”按钮，调试器将运行至它遇到的第一个断点。"
msgstr ""
"在启动调试器之前，首先设置断点。断点是可靠调试的最基本和最重要的功能，若代码编辑器中打开了文件，则可通过单击代码行左侧的边缘来设置断点，或者按 "
"**F9**。 接下来按 **F5** 或者 点击 **运行和调式** 侧边栏面板中的“开始调试”按钮，调试器将运行至它遇到的第一个断点。"

#: ../../debugger.rst:171 046ff0964d2d4e128838190ec19c3a26
msgid "单步执行"
msgstr "单步执行"

#: ../../debugger.rst:173 f45e05e0d3e64cdc94308935082e22c2
msgid "调试器遇到断点后，就进入中断模式，脚本执行被挂起，而函数、变量和合约实例保留在栈中，接下来："
msgstr "调试器遇到断点后，就进入中断模式，脚本执行被挂起，而函数、变量和合约实例保留在栈中，接下来："

#: ../../debugger.rst:175 8ec1cc1c60c0494191b133ccc392d094
msgid "通过按 **F10** 或 **F11** 开始单步执行代码"
msgstr "通过按 **F10** 或 **F11** 开始单步执行代码"

#: ../../debugger.rst:177 b84548a9d26245c381c13b3bd0a82adb
msgid "通过打开右键菜单，选择 **运行到光标** 菜单"
msgstr "通过打开右键菜单，选择 **运行到光标** 菜单"

#: ../../debugger.rst:179 0c8031d2557947b3a8b538840d32c04b
msgid "通过按 **F5** 执行到下一个断点"
msgstr "通过按 **F5** 执行到下一个断点"

#: ../../debugger.rst:181 d66dfaf48e3e4185a1b314c0e057ac8f
msgid "通过按 **Shit + F11** 停止单步执行， 跳出当前函数"
msgstr "通过按 **Shit + F11** 停止单步执行， 跳出当前函数"

#: ../../debugger.rst:183 6fce4fd4dee2482dab5dd499d6bb01a7
msgid ""
"在通过上述操作浏览代码时，左侧调试视图的中的 **变量面板** 和 **调用堆栈面板** 中的数据会实时地变化，如果在 **监视面板** "
"添加了表达式或者变量，将会实时地变化。"
msgstr ""
"在通过上述操作浏览代码时，左侧调试视图的中的 **变量面板** 和 **调用堆栈面板** 中的数据会实时地变化，如果在 **监视面板** "
"添加了表达式或者变量，将会实时地变化。"

#: ../../debugger.rst:188 5d4f3d7fc26e48dcbb80df800b5571e6
msgid "一次调试只能以一个 *public* 函数为入口。"
msgstr "一次调试只能以一个 *public* 函数为入口。"

#: ../../debugger.rst:191 3d06371f56784b50a8841ebacac74218
msgid "调试操作"
msgstr "调试操作"

#: ../../debugger.rst:193 bb9325352b854e44ae263512db43f598
msgid "调试会话开始后，调试工具栏将出现在代码编辑器的顶部。"
msgstr "调试会话开始后，调试工具栏将出现在代码编辑器的顶部。"

#: ../../debugger.rst:199 8617a44b9359431dba314430b024b46b
msgid "继续/暂停 **F5**"
msgstr "继续/暂停 **F5**"

#: ../../debugger.rst:200 845ed1cbfd574ca8b4c06d0b524577e0
msgid "单步跨过 **F10**"
msgstr "单步跨过 **F10**"

#: ../../debugger.rst:201 17d505174f7e43b7b79f005686a89a5c
msgid "单步跳入 **F11**"
msgstr "单步跳入 **F11**"

#: ../../debugger.rst:202 b8f0f13edf4246899683e12723d08e43
msgid "单步跳出 **Shift+F11**"
msgstr "单步跳出 **Shift+F11**"

#: ../../debugger.rst:203 88e3a1bc3b434146a32f02774df7862f
msgid "重启调试器 **Ctrl+Shift+F5**"
msgstr "重启调试器 **Ctrl+Shift+F5**"

#: ../../debugger.rst:204 b144ca3ff5b64c79a7e813df96fa3d3a
msgid "停止 **Shift+F5**"
msgstr "停止 **Shift+F5**"

#: ../../debugger.rst:208 7a20ca3f3e314410bbefcf8527dd4ca0
msgid "变量"
msgstr "变量"

#: ../../debugger.rst:210 1790fa485c224ab5867ccc6e68369c90
msgid ""
"**变量面板** 主要显示两个域的变量： 当前函数和静态变量。 ``this`` 表示当前合约， 单击可展开查看合约的所有属性。 ``Statics``"
" 下则显示所有的静态变量。"
msgstr ""
"**变量面板** 主要显示两个域的变量： 当前函数和静态变量。 ``this`` 表示当前合约， 单击可展开查看合约的所有属性。 ``Statics``"
" 下则显示所有的静态变量。"

#: ../../debugger.rst:218 bbb0e157a9f24c23912a19700f7baadb
msgid "复制值"
msgstr "复制值"

#: ../../debugger.rst:220 cb6b80b32f254844a99dbe4c04269d4c
msgid "在某个变量上右键单击，会出现 **复制值** 菜单，可以直接复制变量的值到剪切板中。"
msgstr "在某个变量上右键单击，会出现 **复制值** 菜单，可以直接复制变量的值到剪切板中。"

#: ../../debugger.rst:227 9fc6c780293c4adba8ad5fca3d442cce
msgid "没有被引用到的静态变量不会出现在最后的脚本编译输出里，也不会在面板中显示。"
msgstr "没有被引用到的静态变量不会出现在最后的脚本编译输出里，也不会在面板中显示。"

#: ../../debugger.rst:231 57397c01d16344d786662803fe51af23
msgid "监视"
msgstr "监视"

#: ../../debugger.rst:233 c4898cfe6e01443f998d7c27611974ba
msgid "可以在 **监视面板** 中添加变量和表达式。"
msgstr "可以在 **监视面板** 中添加变量和表达式。"

#: ../../debugger.rst:239 622766566f1747b582b9b66a26c9d95e
msgid "调用堆栈"
msgstr "调用堆栈"

#: ../../debugger.rst:241 82561887e2004a19bd4ed52027e87d04
msgid ""
"使用“调用堆栈”面板可以查看当前被调用的所有函数。 “调用堆栈”窗口显示函数被调用的顺序。栈底是当前调试的 *public* 函数。 "
"单击“调用堆栈”上的函数名，代码编辑器会自动跳转到函数定义的位置。"
msgstr ""
"使用“调用堆栈”面板可以查看当前被调用的所有函数。 “调用堆栈”窗口显示函数被调用的顺序。栈底是当前调试的 *public* 函数。 "
"单击“调用堆栈”上的函数名，代码编辑器会自动跳转到函数定义的位置。"

#: ../../debugger.rst:250 9577eb0b4b5041cdafa70d5024b9b2f4
msgid "调试控制台 (REPL)"
msgstr "调试控制台 (REPL)"

#: ../../debugger.rst:259 43ff24fdc87949e496225ab2d7e0edec
msgid "异常"
msgstr "异常"
