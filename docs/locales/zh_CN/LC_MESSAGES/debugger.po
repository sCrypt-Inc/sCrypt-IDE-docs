# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sCrypt.Inc
# This file is distributed under the same license as the sCrypt-IDE-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: sCrypt-IDE-docs 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-03 17:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../debugger.rst:5 f68d32f8cd894ee4bc8987dca3b91970
msgid "调试器"
msgstr "调试器"

#: ../../debugger.rst:7 6b03ff06a4f64d9f9fb2b72ec584c019
#, fuzzy
msgid ""
"**sCrypt IDE** 自带一个功能强大的调试器。你可以用它来调试 **.scrypt** "
"源代码。如果您购买了高级付费功能，您还可以用它来进行比特币脚本级别的调试。 "
"并非所有合约都可以编写完成后就会按照预期行事，当它发生错误时，你可能需要盯着代码看好几个小时，一个好调试器可以让你更轻松且更高效地解决问题。 "
"当调试合约时，调试器在运行过程中可提供许多方法让你查看代码的情况，比如您可以逐步执行代码、查看变量中存储的值、查看函数的调用栈、查看比特币双堆栈中的数据、代码的执行路径等。"
msgstr ""
"**sCrypt IDE** 自带一个功能强调的调试器。你可以用它来调试 * *.scrypt* "
"源代码，如果您购买了高级付费功能，您还可以用它来进行比特币脚本级别的调试。 "
"并非所有合约都可以编写完成后就会按照预期行事，当它发生错误时，你可能需要盯着代码看好几个小时，一个好调试器可以让你更轻松且更高效地解决问题。 "
"当调试合约时，调试器在运行过程中可提供许多方法让你查看代码的情况，比如您可以逐步执行代码、查看变量中存储的值、查看函数的调用栈、查看比特币双堆栈中的数据、代码的执行路径等。"

#: ../../debugger.rst:14 976827c4fde14498a9e444aee309ba28
msgid "配置调试器启动参数"
msgstr "配置调试器启动参数"

#: ../../debugger.rst:16 2fd0b4248af64025a228a9e654283a39
#, fuzzy
msgid ""
"与一般语言（比如c++/javascript)不同， 启动 **sCrypt IDE** 的 debugger 必须配置启动参数。这是 "
"**sCrypt** 语言的结构特性决定的，如下图： 我们知道比特币脚本的执行是将解锁脚本和锁定脚本连接起来形成完整的脚本后再执行， "
"其中解锁脚本在前，锁定脚本在后。 **sCrypt** 合约含有一个或者多个 ``public`` 方法， 启动调试器就是运行合约的某一个 "
"``public`` 方法，方法的参数对应解锁脚本， 方法的内容对应锁定脚本。 "
"运行这个方法，我们需要按照这个方法的签名来正确的配置调用方法的参数，也就是解锁脚本。"
msgstr ""
"与其它语言不同的是， 启动 **sCrypt IDE** 的 debugger "
"必须配置启动参数，而一般语言（比如c++/javascript)则不需要。这是 **sCrypt** 语言的结构特性决定的，如下图： "
"我们知道比特币脚本的执行是将解锁脚本和锁定脚本连接起来形成完整的脚本后再执行， 其中解锁脚本在前，锁定脚本在后。 **sCrypt** "
"合约含有一个或者多个 ``public`` 方法， 启动调试器就是运行合约的某一个 ``public`` 方法，方法的参数对应解锁脚本， "
"方法的内容对应锁定脚本。 运行这个方法，我们需要按照这个方法的签名来正确的配置调用方法的参数，也就是解锁脚本。"

#: ../../debugger.rst:25 f7dbb28680f64f7285f9cad273b519d6
msgid "创建launch.json"
msgstr "创建launch.json"

#: ../../debugger.rst:26 c81278b3c86b4cc9b62283791a6106aa
msgid "打开调试视图，如果当前工作区没有创建 **launch.json** ，会提示您创建 **launch.json** 文件。"
msgstr "打开调试视图，如果当前工作区没有创建 **launch.json** ，会提示您创建 **launch.json** 文件。"

#: ../../debugger.rst:33 640a9f2b5bae4dcfb9928dd113064a9b
msgid ""
"下面是一个调试 `p2pkh <https://github.com/sCrypt-"
"Inc/boilerplate/blob/master/contracts/p2pkh.scrypt>`_ 合约的示例配置："
msgstr ""

#: ../../debugger.rst:59 2c3c861dff294497a2439e68d4732424
msgid "配置项说明"
msgstr "配置项说明"

#: ../../debugger.rst:62 6204affb876e4a3fa117c178df1d64ff
msgid "配置项"
msgstr "配置项"

#: ../../debugger.rst:62 ../../debugger.rst:84 047d6e135cbb4c04a0c05f268871baf2
#: 4e409095d6874f76abee90e3eed55291
msgid "必须"
msgstr "必须"

#: ../../debugger.rst:62 ../../debugger.rst:84 179d2dc84ab54f41928dd4fec8736e3d
#: 402d37a98da34a71ac03acc48e6cbabe
msgid "说明"
msgstr "说明"

#: ../../debugger.rst:64 ad4a21d258b647e88488cac8516aa418
msgid "type"
msgstr "type"

#: ../../debugger.rst:64 ../../debugger.rst:65 ../../debugger.rst:66
#: ../../debugger.rst:67 ../../debugger.rst:68 ../../debugger.rst:69
#: ../../debugger.rst:70 ../../debugger.rst:86 ../../debugger.rst:87
#: ../../debugger.rst:88 0024d79237f94e39bb2b9e373fe5c282
#: 1362811cc11242f19cee5b30bd371945 238448439e0e4663a2f8ac21c3ac27aa
#: 5b8bd2be00364a7ebbf022d46d3c2991 6676eee1b0ec4cafbbfe7c67f9d97b90
#: 69707d0088fe4dbca18fc0719517566f 942e166d6bd949059aa6233386e66906
#: bc0fca3edd4144b7aaf7c8f3620d1b3f
msgid "是"
msgstr "是"

#: ../../debugger.rst:64 a961f54727c14bd08145b609ebd68f89
msgid "配置类型，固定为 ``scrypt``"
msgstr "配置类型，固定为 ``scrypt``"

#: ../../debugger.rst:65 3794e66d594b41008c90b417f2ecef79
msgid "request"
msgstr "request"

#: ../../debugger.rst:65 4acc09f1e24f4bc8b07829a9f0fd144b
msgid "调试器启动类型，只支持 ``launch`` 模式"
msgstr "调试器启动类型，只支持 ``launch`` 模式"

#: ../../debugger.rst:66 e378409f1343433aa3e7608f3019ea8b
msgid "name"
msgstr "name"

#: ../../debugger.rst:66 5b021064fe4d48a485db55b801affdc3
msgid "配置名称"
msgstr "配置名称"

#: ../../debugger.rst:67 26191128b58a4ad1b74114554aac36b6
msgid "program"
msgstr "program"

#: ../../debugger.rst:67 910a095e98184e13a424b8a2bc4c9dfa
#, fuzzy
msgid "要调试的源代码文件，可以使用VS Code的工作区代号 ``${workspaceFolder}``，也可以使用绝对路径"
msgstr "要调试的源代码文件，可以使用vscode的工作区代号 ``${workspaceFolder}``，也可以使用绝对路径"

#: ../../debugger.rst:68 b3f79fa2d0df4678917d010920fd869a
msgid "constructorArgs"
msgstr "constructorArgs"

#: ../../debugger.rst:68 53e6045c0f144982965a97a70de04f83
#, fuzzy
msgid "合约的构造参数"
msgstr "合约的构造参数实例"

#: ../../debugger.rst:69 898bb34918c64023a83afa4867177b93
msgid "pubFunc"
msgstr "pubFunc"

#: ../../debugger.rst:69 7065edd5065e46dd8820219e93a25d7b
msgid "要调试的 ``public`` 方法名称"
msgstr "要调试的 ``public`` 方法名称"

#: ../../debugger.rst:70 5c32f43b22034443bd95530ddf9f5b61
msgid "pubFuncArgs"
msgstr "pubFuncArgs"

#: ../../debugger.rst:70 54821cf7d31b469f9929aaf6d7b53257
#, fuzzy
msgid "要调试的 ``public`` 方法的参数"
msgstr "要调试的 ``public`` 方法名称"

#: ../../debugger.rst:71 a7c62f7c3221482ba90b1ad3bf8c0f6e
msgid "txContext"
msgstr "txContext"

#: ../../debugger.rst:71 ../../debugger.rst:72 ../../debugger.rst:89
#: 6e1bf1da692e4ff78e443d835d60840d 863c519d14e049fd8a067846200daa24
#: 8e22f9f91baf4ed6a5a9007a2ef84bef
msgid "否"
msgstr "否"

#: ../../debugger.rst:71 65ea9fac5cee4c25997888fe69614909
msgid "运行方法所需的 :ref:`交易上下文 <txContext>`"
msgstr ""

#: ../../debugger.rst:72 b37c2d0e555f414dbafbdbe404b22d1d
msgid "asmArgs"
msgstr "asmArgs"

#: ../../debugger.rst:72 c6254bc228384c7780b224a9cd66e3a6
#, fuzzy
msgid "`汇编变量 <https://scryptdoc.readthedocs.io/zh_CN/latest/asm.html>`_ 值"
msgstr "`汇编变量 <https://scryptdoc.readthedocs.io/zh_CN/latest/asm.html>`_ 实例"

#: ../../debugger.rst:79 5d13664fed7748c48f4fa2283f3342bf
msgid "交易上下文"
msgstr "交易上下文"

#: ../../debugger.rst:81 d29c6409ca2542559b0e4af2400fe840
msgid "交易上下文，即 **txContext** 参数，指定调试时当前交易的相关上下文信息，仅当在合约内检查签名时才需要，否则调试器无法进行的校验。"
msgstr ""

#: ../../debugger.rst:84 0611859588f149cdb1afed16cbf69f15
msgid "字段"
msgstr "字段"

#: ../../debugger.rst:86 7e5cb28bc43c41e7b9f21438aebed7d5
msgid "hex"
msgstr "hex"

#: ../../debugger.rst:86 c45d9f6a74f247829601b32bb9b97062
#, fuzzy
msgid "序列化的当前交易，即解锁脚本所在交易, 可以是签名过的，也可以是未签名的"
msgstr "序列化的当前交易，即解锁脚本所在交易"

#: ../../debugger.rst:87 2fb28ef42f934611a01dd37fbac0ce32
msgid "inputIndex"
msgstr "inputIndex"

#: ../../debugger.rst:87 ac26447b66d14fdbb0f22610172206ce
msgid "要花费的、被合约锁定的 UTXO 所对应的 input 索引"
msgstr ""

#: ../../debugger.rst:88 df4f217fee164af3a39daa14945b7a1f
msgid "inputSatoshis"
msgstr "inputSatoshis"

#: ../../debugger.rst:88 4420330b96bb4a75ab0cbe99212ee7f0
msgid "要花费的、被合约锁定的 UTXO 中比特币数量，单位 *satoshis*"
msgstr ""

#: ../../debugger.rst:89 104ad098a04744479c03fe73217e8995
msgid "opReturn"
msgstr "opReturn"

#: ../../debugger.rst:89 35d37b590e4e4905ad20ea913d9de478
msgid "有状态合约锁定脚本对应的状态"
msgstr "有状态合约锁定脚本对应的状态"

#: ../../debugger.rst:94 1de0b5877f374aed8a89f969f7e1a0b0
msgid ""
"了解校验签名是如何运作的: `CHECKSIG "
"<https://wiki.bitcoinsv.io/index.php/OP_CHECKSIG>`_"
msgstr ""

#: ../../debugger.rst:99 c885ee108e7c4431b2d94ad7836b62cb
msgid "设置断点并启动调试器"
msgstr "设置断点并启动调试器"

#: ../../debugger.rst:102 c7012b11463f44df839d9d5c58725a3b
msgid ""
"在启动调试器之前，我们首先设置断点。断点是可靠调试的最基本和最重要的功能，若代码编辑器中打开了文件，则可通过单击代码行左侧的边缘来设置断点，或者按"
" **F9**。 接下来我们按 **F5** 或者 点击 **运行和调式** 侧边栏面板中的“开始调试”按钮，调试器将运行至它遇到的第一个断点。"
msgstr ""
"在启动调试器之前，我们首先设置断点。断点是可靠调试的最基本和最重要的功能，若代码编辑器中打开了文件，则可通过单击代码行左侧的边缘来设置断点，或者按"
" **F9**。 接下来我们按 **F5** 或者 点击 **运行和调式** 侧边栏面板中的“开始调试”按钮，调试器将运行至它遇到的第一个断点。"

#: ../../debugger.rst:109 b2bc9cb2139f4934849c7d6e9ff9a21e
msgid "使用单步执行命令在调试器中移动浏览代码"
msgstr "使用单步执行命令在调试器中移动浏览代码"

#: ../../debugger.rst:111 ee3a9a03324a462e9c3358527c30863e
msgid "调试器遇到断点后，就进入中断模式，脚本执行被挂起，而函数、变量和合约实例保留在栈中，接下来："
msgstr "调试器遇到断点后，就进入中断模式，脚本执行被挂起，而函数、变量和合约实例保留在栈中，接下来："

#: ../../debugger.rst:113 27bc1f5fab314fa3b8f93ca8afa658c7
msgid "通过按 **F10** 或 **F11** 开始单步执行代码"
msgstr "通过按 **F10** 或 **F11** 开始单步执行代码"

#: ../../debugger.rst:115 442a16d218ea48db8e1a2ee568954b8e
msgid "通过打开右键菜单，选择 **运行到光标** 菜单"
msgstr "通过打开右键菜单，选择 **运行到光标** 菜单"

#: ../../debugger.rst:117 2d68339019e049d8a6fd1d4aaddb6819
msgid "通过按 **F5** 执行到下一个断点"
msgstr "通过按 **F5** 执行到下一个断点"

#: ../../debugger.rst:119 ee8b32aadbb242c4b239e4a7be02a467
msgid "通过按 **Shit + F11** 停止单步执行， 跳出当前函数"
msgstr "通过按 **Shit + F11** 停止单步执行， 跳出当前函数"

#: ../../debugger.rst:121 8028bad11f634e3a81f52ccf76b91c37
msgid ""
"在您通过上述操作浏览代码时，左侧调试视图的中的 **变量面板** 和 **调用堆栈面板** 中的数据会实时地变化，如果你在 **监视面板** "
"添加了表达式或者变量，将会实时地变化。"
msgstr ""
"在您通过上述操作浏览代码时，左侧调试视图的中的 **变量面板** 和 **调用堆栈面板** 中的数据会实时地变化，如果你在 **监视面板** "
"添加了表达式或者变量，将会实时地变化。"

#: ../../debugger.rst:126 54821cf7d31b469f9929aaf6d7b53257
msgid "一次调试只能以一个  ``public`` 方法为入口。"
msgstr "一次调试只能以一个  ``public`` 方法为入口。"

#: ../../debugger.rst:129 a49cbf46ca594762af59600bdeb96dbc
msgid "调试操作"
msgstr ""

#: ../../debugger.rst:131 721bb5aa62294bd982d2ea31da256a0b
msgid "调试会话开始后，调试工具栏将出现在代码编辑器的顶部。"
msgstr ""

#: ../../debugger.rst:137 94f99693ace5485685b8363be826838c
msgid "继续/暂停 **F5**"
msgstr ""

#: ../../debugger.rst:138 cf2f3cd0bbbf4aad8bd6be7993b69385
msgid "单步跨过 **F10**"
msgstr ""

#: ../../debugger.rst:139 6d6bcfe96a7945389982c76263c7fdd8
msgid "单步跳入 **F11**"
msgstr ""

#: ../../debugger.rst:140 02d36b0b45e34c2aba73c1e809c50037
msgid "单步跳出 **Shift+F11**"
msgstr ""

#: ../../debugger.rst:141 5e1f75f33fba4a43a2d6ca21557b3cc0
msgid "重启调试器 **Ctrl+Shift+F5**"
msgstr ""

#: ../../debugger.rst:142 77e672ee67d444fb879081cfe5995af1
msgid "停止 **Shift+F5**"
msgstr ""

#: ../../debugger.rst:146 5e313b04b88c4f6a937345edd4f2af1b
msgid "变量"
msgstr "变量"

#: ../../debugger.rst:148 09d3a36d533c4e0fac6d04545e30453e
msgid ""
"**变量面板** 主要显示两个域的变量： 当前函数和静态变量 ``this`` 表示当前合约， 单击可展开查看合约的所有属性， "
"``static`` 下则显示所有的静态变量。"
msgstr ""
"**变量面板** 主要显示两个域的变量： 当前函数和静态变量 ``this`` 表示当前合约， 单击可展开查看合约的所有属性， "
"``static`` 下则显示所有的静态变量。"

#: ../../debugger.rst:156 ceb0843d474f493987f6146f5215477d
msgid "复制值"
msgstr "复制值"

#: ../../debugger.rst:158 f86c6236bef6442e94c2656ecb918126
msgid "在某个变量上右键单击，会出现 **复制值** 菜单，您可以直接复制变量的值到剪切板中。"
msgstr "在某个变量上右键单击，会出现 **复制值** 菜单，您可以直接复制变量的值到剪切板中。"

#: ../../debugger.rst:165 d4aac6faeba642549ab80205c996a548
msgid "没有被引用到的静态变量不会被推入栈中，也不会在面板中显示。"
msgstr "没有被引用到的静态变量不会被推入栈中，也不会在面板中显示。"

#: ../../debugger.rst:169 a8ee717dbf8d48248c265792b415f83c
msgid "监视"
msgstr "监视"

#: ../../debugger.rst:171 64916cba65d64460bbc769c052ea877f
msgid "您可以在 **监视面板** 中添加变量和表达式。"
msgstr "您可以在 **监视面板** 中添加变量和表达式。"

#: ../../debugger.rst:177 bdcce8eb9af64cd1aff9ac121b84c179
msgid "调用堆栈"
msgstr "调用堆栈"

#: ../../debugger.rst:179 6d4873ffffe3481f81c49aceadf9d613
msgid ""
"使用“调用堆栈”面板可以查看当前堆栈上的函数或过程调用。 “调用堆栈”窗口显示方法和函数被调用的顺序。栈底式当前调试的 ``public`` "
"方法。 单击“调用堆栈”上的函数名，代码编辑器会自动跳转到函数的定义的位置。"
msgstr ""
"使用“调用堆栈”面板可以查看当前堆栈上的函数或过程调用。 “调用堆栈”窗口显示方法和函数被调用的顺序。栈底式当前调试的 ``public`` "
"方法。 单击“调用堆栈”上的函数名，代码编辑器会自动跳转到函数的定义的位置。"

#: ../../debugger.rst:188 cdddf15419c44a538fd1637521408950
msgid "调试控制台 (REPL)"
msgstr "调试控制台 (REPL)"

#: ../../debugger.rst:197 aaf925da465342e5851aad97da505bac
msgid "调试中的异常"
msgstr "调试中的异常"

#~ msgid "下面是一个调试 ``p2pkh`` 合约的示例配置："
#~ msgstr "下面是一个调试 ``p2pkh`` 合约的示例配置："

#~ msgid "运行 ``public`` 方法的参数实例，即解锁脚本"
#~ msgstr "运行 ``public`` 方法的参数实例，即解锁脚本"

#~ msgid "运行方法所需的交易上下文，具体定义参照下表"
#~ msgstr "运行方法所需的交易上下文，具体定义参照下表"

#~ msgid "解锁脚本对应input所在当前交易中的索引"
#~ msgstr "解锁脚本对应input所在当前交易中的索引"

#~ msgid "解锁脚本对应input中锁定的satoshis"
#~ msgstr "解锁脚本对应input中锁定的satoshis"

