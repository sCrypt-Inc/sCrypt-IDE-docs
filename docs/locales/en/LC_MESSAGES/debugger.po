# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, sCrypt.Inc
# This file is distributed under the same license as the sCrypt-IDE-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Xiaohui Liu <x.liu@scrypt.io>, 2021
# qtom zheng <zhfnjust@qq.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: sCrypt-IDE-docs 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-30 14:38+0800\n"
"PO-Revision-Date: 2021-06-02 09:22+0000\n"
"Last-Translator: qtom zheng <zhfnjust@qq.com>, 2022\n"
"Language-Team: English (https://www.transifex.com/scrypt-1/teams/121283/en/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../debugger.rst:5 233e8a9321b348a5be36643d8f76f4ad
msgid "调试器"
msgstr "Debugger"

#: ../../debugger.rst:7 09774be50210497ebe1b2f418ba29a04
msgid ""
"**IDE** 自带一个功能强大的调试器。可以用它来调试 ``.scrypt`` 源代码。如果购买了高级付费功能，还可以用它来进行脚本级别的调试。 "
"并非所有合约都可以编写完成后就会按照预期行事，当它发生错误时，可能需要盯着代码看好几个小时，一个好调试器可以让你更轻松且更高效地解决问题。 "
"当调试合约时，调试器提供许多方法让你查看代码的情况，比如逐步执行代码、查看变量中存储的值、查看函数的调用栈、查看比特币双堆栈中的数据、代码的执行路径等。"
msgstr ""
"**IDE** comes with a powerful debugger. You can use it to debug the "
"``.scrypt`` source code. If you have purchased advanced paid features, you "
"can also use it for script-level debugging. Not all contracts can be written"
" and behave as expected. When an error occurs, you may need to stare at the "
"code for several hours. A good debugger can make it easier and more "
"efficient for you to solve the problem. When debugging a contract, the "
"debugger provides many methods for you to view the status of the code, such "
"as step-by-step execution of the code, view the value stored in the "
"variable, view the call stack of the function, view the data in the Bitcoin "
"dual stack, and the execution path of the code."

#: ../../debugger.rst:14 39943f8b077f4b3e88b3097950cd0079
msgid "配置启动参数"
msgstr "Configure Startup Parameters"

#: ../../debugger.rst:16 2bba2ea0e47941e48cbaf83bc731a73e
msgid ""
"与一般语言（比如C++/Javascript)不同， 启动 **IDE** 的 debugger 必须配置启动参数。这是 **sCrypt** "
"语言的结构特性决定的，如下图： 我们知道比特币脚本的执行是将解锁脚本和锁定脚本连接起来形成完整的脚本后再执行， 其中解锁脚本在前，锁定脚本在后。 "
"**sCrypt** 合约含有一个或者多个 *public* 函数， 启动调试器就是运行合约的某一个 *public* 函数，函数的参数对应解锁脚本， "
"函数的内容对应锁定脚本。 运行这个函数，需要按照这个函数的签名来正确的配置调用函数的参数，也就是解锁脚本。"
msgstr ""
"Unlike general languages (such as C++/Javascript), the debugger that starts "
"**IDE** must be configured with startup parameters. This is determined by "
"the structural characteristics of the **sCrypt** language, as shown in the "
"following figure: We know that the execution of the Bitcoin script is to "
"connect the unlocking script and the locking script to form a complete "
"script before execution, where the unlocking script is first, and the "
"locking script is Rear. The **sCrypt** contract contains one or more "
"*public* functions. Starting the debugger is to run a certain *public* "
"function of the contract. The parameters of the function correspond to the "
"unlock script, and the content of the function corresponds to the lock "
"script. To run this function, you need to correctly configure the parameters"
" of the calling function according to the signature of this function, that "
"is, the unlocking script."

#: ../../debugger.rst:25 61282038b88c40cea1f3790d89a2851a
msgid "创建launch.json"
msgstr "Create launch.json"

#: ../../debugger.rst:26 ab93ca990317405ca34c5db4c8aad916
msgid "打开调试视图，如果当前工作区没有创建 **launch.json** ，会提示你创建 **launch.json** 文件。"
msgstr ""
"Open the debug view. If the **launch.json** is not created in the current "
"workspace, you will be prompted to create a new **launch.json** file."

#: ../../debugger.rst:33 2611e906033e44a0a882a511b789d24a
msgid "下面是一个调试 `p2pkh`_ 合约的示例配置："
msgstr ""
"The following is an example configuration for debugging the `p2pkh`_ "
"contract:"

#: ../../debugger.rst:59 2bd79bc0586b43839ebcb79e23067054
msgid "配置项说明"
msgstr "Configuration Description"

#: ../../debugger.rst:62 580690d56a044a3ab90bbc716aadeccd
msgid "配置项"
msgstr "Configuration"

#: ../../debugger.rst:62 ../../debugger.rst:112
#: e325769483c542f39a4947681ee15a2e 40348fb374074e699f87ad0a26e960b0
msgid "必须"
msgstr "Required"

#: ../../debugger.rst:62 ../../debugger.rst:112
#: 3dd70e6cd2ae45c99d12cec06eb8f575 77512e61515247ffa9092a26127c5541
msgid "说明"
msgstr "Description"

#: ../../debugger.rst:64 340f515f3299496698e96ca48efacc8e
msgid "type"
msgstr "type"

#: ../../debugger.rst:64 ../../debugger.rst:65 ../../debugger.rst:66
#: ../../debugger.rst:67 ../../debugger.rst:68 ../../debugger.rst:69
#: ../../debugger.rst:70 ../../debugger.rst:114 ../../debugger.rst:115
#: ../../debugger.rst:116 9a1243b43f68403fa33f50fd103bf7e6
#: 6a82a1f20590444ea29a92a4deb071dc c875d042b2e84ed18e3906901666c7c4
#: 56557d4f4e404ae299346e7f755c7fcd 66077b80d03348f6845585a96cc05b3f
#: 35999b571f774af89547a3c682feb672 a10b6cff3ba54a48813ce7624104881c
#: 3785fe25f3f948a483ced49ab76db821 3785fe25f3f948a483ced49ab76db821
#: 3785fe25f3f948a483ced49ab76db821
msgid "是"
msgstr "Yes"

#: ../../debugger.rst:64 f56c5aa9056f4733bc9fdc4587056425
msgid "配置类型，固定为 ``scrypt``"
msgstr "Configuration type, fixed as ``scrypt``"

#: ../../debugger.rst:65 b0133e2f62124fe39aabd9a9674a77bd
msgid "request"
msgstr "request"

#: ../../debugger.rst:65 a35599e3f5a14a6e87edf7564d252309
msgid "调试器启动类型，只支持 ``launch`` 模式"
msgstr "Debugger startup type, only supports ``launch`` mode"

#: ../../debugger.rst:66 ab1d82138c2a431ba463448bcceb2878
msgid "name"
msgstr "name"

#: ../../debugger.rst:66 b47ee2ed287d4eeba33319f5d1f28aa3
msgid "配置名称"
msgstr "Configuration name"

#: ../../debugger.rst:67 71725e72dfcb405cad15b0d081daee33
msgid "program"
msgstr "program"

#: ../../debugger.rst:67 8accb43379154f8ba523a4243a2cfa26
msgid "要调试的源代码文件，可以使用VS Code的工作区代号 ``${workspaceFolder}``，也可以使用绝对路径"
msgstr ""
"To debug the source code file, you can use the VS Code workspace folder "
"``${workspaceFolder}``, or you can use an absolute path"

#: ../../debugger.rst:68 70198b19e6c047dd9af0e72599e70d15
msgid "constructorArgs"
msgstr "constructorArgs"

#: ../../debugger.rst:68 efa969ecad9746acbab4a29a3c6b88d2
msgid "合约的构造参数"
msgstr "Contract constructor parameters"

#: ../../debugger.rst:69 8ad78c654568483681f1e7c56a3e07cf
msgid "pubFunc"
msgstr "pubFunc"

#: ../../debugger.rst:69 1950ac339e1c4342a656caf4c4e9f49f
msgid "要调试的 *public* 函数名称"
msgstr "*public* function name to be debugged"

#: ../../debugger.rst:70 e49aef4000e34e58b28b7160738d8418
msgid "pubFuncArgs"
msgstr "pubFuncArgs"

#: ../../debugger.rst:70 9d01f7df23b341c2bc2d9a642b973a54
msgid "要调试的 *public* 函数的参数"
msgstr "The arguments of the *public* function to be debugged"

#: ../../debugger.rst:71 16cb7def590446029e5bfe8bb2eec7a2
msgid "txContext"
msgstr "txContext"

#: ../../debugger.rst:71 ../../debugger.rst:72 ../../debugger.rst:117
#: ../../debugger.rst:118 5618660bdd9b4393bf2519724a1696a7
#: 0db92bc670144da9adf98113f5b1b401 60ff91911258448fb71e7c1ae0bb21d0
#: 60ff91911258448fb71e7c1ae0bb21d0
msgid "否"
msgstr "No"

#: ../../debugger.rst:71 789bbb2393384d2aa964dc42a4375183
msgid "运行函数所需的 :ref:`交易上下文 <txContext>`"
msgstr ""
"Required to debug a function that needs :ref:`Transaction Context "
"<txContext>`"

#: ../../debugger.rst:72 d2febd91e017474ab01a127e4b8a117b
msgid "asmArgs"
msgstr "asmArgs"

#: ../../debugger.rst:72 6a956ed43d7341e185ca3bfc6b8079d0
msgid "`汇编变量`_"
msgstr "`Assembly Variable`_"

#: ../../debugger.rst:78 4d214ab8096f4bb1a573f5e89842483e
msgid "参数输入格式"
msgstr "Argument Input Format"

#: ../../debugger.rst:81 d2a5e2358acd4f7aaac1ed1b091965ab
msgid "参数类型"
msgstr "Parameter Type"

#: ../../debugger.rst:81 8ce8b628d9ca40c0b0b4df40983f1e80
msgid "输入格式说明"
msgstr "Input Format Description"

#: ../../debugger.rst:83 3e5a9e1c90be4ba39f169f9308c0bffa
msgid "bool"
msgstr "bool"

#: ../../debugger.rst:83 4dcf6bf586c545a59e946fc7f0b0b901
msgid "``true`` 或者 ``false``"
msgstr "``true`` or ``false``"

#: ../../debugger.rst:84 46e4461afac64e36bbf03f86c4081eb0
msgid "int"
msgstr "int"

#: ../../debugger.rst:84 d71497ce4558443e8e930755491a3229
msgid ""
"数字或字符串，如果值小于 ``9007199254740991`` (2^53 − 1)， 可以直接使用数字表示，也可以使用字符串表示（包括十进制 "
"字符串和 ``0x`` 开头的十六进制字符串），如果值大于等于 ``9007199254740991``，应该使用字符串表示"
msgstr ""
"Number or string, if the value is less than ``9007199254740991`` (2^53 − 1),"
" it can be represented by numbers directly or by string (including decimal "
"string and hexadecimal starting with ``0x`` String), if the value is greater"
" than or equal to ``9007199254740991``, it should be represented by a string"

#: ../../debugger.rst:86 e95fb86e3ee64d39bfb8d2f5ef137aa2
msgid "bytes"
msgstr "bytes"

#: ../../debugger.rst:86 a1fd9072bb6d4ffe821e0859c25a2dd0
msgid "字符串, 例如: ``\"b'0011'\"``，或者是带双引号的字符串 ``\"\\\"hello world\\\"\"``"
msgstr ""
"A string, for example: ``\"b'0011'\"``, or a double-quoted string "
"``\"\\\"hello world\\\"\"``"

#: ../../debugger.rst:87 9f61ec870af44d14a7a3f52d2a804a5c
msgid "PubKey"
msgstr "PubKey"

#: ../../debugger.rst:87 95daaad6357c4cdc85d0060cae7f8d9d
msgid ""
"字符串, 例如: "
"``\"PubKey(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``，括号中间是"
" *bytes*"
msgstr ""
"String, e.g., "
"``\"PubKey(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``,"
" the middle of the bracket is *bytes*"

#: ../../debugger.rst:89 e64acd9c26814ebe8f74e073704681ec
msgid "PrivKey"
msgstr "PrivKey"

#: ../../debugger.rst:89 06e39c0ca14b4d7980028fdd0f4d38bb
msgid ""
"字符串, 例如: ``\"PrivKey(1000000000000)\"`` or ``\"PrivKey(0x036cfa9a)\"``, "
"括号中间是十进制或十六进制数字"
msgstr ""
"String, e.g., ``\"PrivKey(1000000000000)\"`` or ``\"PrivKey(0x036cfa9a)\"``,"
" with decimal or hexadecimal numbers in the middle of the brackets"

#: ../../debugger.rst:90 64eda5e5bb2249deb8ce55ecfeb72a64
msgid "Sig"
msgstr "Sig"

#: ../../debugger.rst:90 17c64d6d6a2c4f5695d5b98e5920ed10
msgid ""
"字符串, 例如: "
"``\"Sig(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')\"``，括号中间是"
" *bytes*"
msgstr ""
"String, e.g., "
"``\"Sig(b'036cfa9a0b0abf4fa56e583b99f8d1ba4a2608096283cdea68ecf1d4f5bdefeb1f')``"
" , with *bytes* in the middle of the brackets"

#: ../../debugger.rst:91 17bdb1472e5946478ce330858e4d2c96
msgid "Ripemd160"
msgstr "Ripemd160"

#: ../../debugger.rst:91 05096cda61ba49b2ab15cdb531987b4a
msgid ""
"字符串, 例如: "
"``\"Ripemd160(b'ba53f598a150a242b21bcb6963a2db6dae6fa896')\"``，括号中间是 *bytes*"
msgstr ""
"String, e.g., "
"``\"Ripemd160(b'ba53f598a150a242b21bcb6963a2db6dae6fa896')\"``, the middle "
"of the bracket is *bytes*"

#: ../../debugger.rst:92 18b63957bd6b4f799c4232d5115c7b66
msgid "Sha1"
msgstr "Sha1"

#: ../../debugger.rst:92 aabc768885ba4b03994fc425a6f1f68b
msgid ""
"字符串, 例如: ``\"Sha1(b'3e5b01787918c4e39f99ee70d7db11dddb1cc98d')\"``，括号中间是 "
"*bytes*"
msgstr ""
"String, e.g., ``\"Sha1(b'3e5b01787918c4e39f99ee70d7db11dddb1cc98d')\"``, in "
"the middle of the bracket is *bytes*"

#: ../../debugger.rst:93 7b0b79c1be4443b69968a7667a38d3e3
msgid "Sha256"
msgstr "Sha256"

#: ../../debugger.rst:93 7a7150c9b95e405aa29303292928d1f5
msgid ""
"字符串, 例如: "
"``\"Sha256(b'5a3d057ba410db21e6e92788779e6262a83d0a305762d5ece77dc801c6242f70')\"``，括号中间是"
" *bytes*"
msgstr ""
"String, e.g., "
"``\"Sha256(b'5a3d057ba410db21e6e92788779e6262a83d0a305762d5ece77dc801c6242f70')\"``,"
" in the middle of the bracket is *bytes*"

#: ../../debugger.rst:94 ecae52f8f15941a88abaa7fabef44d7d
msgid "SigHashType"
msgstr "SigHashType"

#: ../../debugger.rst:94 82263384f3ac41b98f075dea0fbab130
msgid "字符串, 例如: ``\"SigHashType(b'4c')\"``，括号中间是 *bytes*"
msgstr ""
"String, e.g., ``\"SigHashType(b'4c')\"``, *bytes* in the middle of the "
"brackets"

#: ../../debugger.rst:95 cf5aa1af4d624134b08fb0761d9ae6da
msgid "SigHashPreimage"
msgstr "SigHashPreimage"

#: ../../debugger.rst:95 c64d2f4f646b47d7ade01aad7b7119ff
msgid ""
"字符串, 例如: "
"``\"SigHashPreimage(b'0100000028bcef7e73248aa273db19d73f65730862b2491c8e0eeb767f7fbd78c4...')\"``，括号中间是"
" *bytes*"
msgstr ""
"String, e.g.,  "
"``\"SigHashPreimage(b'0100000028bcef7e73248aa273db19d73f65730862b2491c8e0eeb767f7fbd78c4...')\"``,"
" the middle of the bracket is *bytes*"

#: ../../debugger.rst:96 d928989b061e40c084d5de3a62c02e38
msgid "OpCodeType"
msgstr "OpCodeType"

#: ../../debugger.rst:96 a4d670b504a54a37aaf0492b51c1a795
msgid "字符串, 例如: ``\"OpCodeType(b'81')\"`` 表示 OP_1， 更多 `Opcodes`_ ，括号中间是 *bytes*"
msgstr ""
"String, e.g., ``\"OpCodeType(b'81')\"`` means OP_1, more `Opcodes`_, *bytes*"
" in the middle of the brackets"

#: ../../debugger.rst:99 2d65a2768bd345a5b6e2e0a45c658dda
msgid "数组"
msgstr "Array"

#: ../../debugger.rst:99 665964e79c9f47d9b0907c7943254bca
msgid "同 *JSON* 的数组，所有元素必须是以上基本类型或者是结构体、数组"
msgstr ""
"Same as *JSON* array, all elements must be of the above basic types or "
"structures or arrays"

#: ../../debugger.rst:100 cd19a320ab8545458fc340ea6a2e65c6
msgid "结构体"
msgstr "Structure"

#: ../../debugger.rst:100 8251fb8d30854365bdfb29eaec8391a6
msgid "同 *JSON* 的对象，所有成员必须是以上基本类型或者是结构体、数组"
msgstr ""
"Same as *JSON* objects, all members must be of the above basic types or "
"structures or arrays"

#: ../../debugger.rst:101 66ec371f97de4a2f9afa0e274c9eb3d0
msgid "类型别名"
msgstr "Type Alias"

#: ../../debugger.rst:101 cc022f135a714effbf8e578025bef2e1
msgid ""
"使用类型别名对应的实际类型作为输入格式，例如: ``type A = Ripemd160``， 则输入 "
"``\"Ripemd160(b'...')\"``"
msgstr ""
"Use the actual type corresponding to the type alias as the input format, for"
" example: ``type A = Ripemd160``, then enter ``\"Ripemd160(b'...')\"``"

#: ../../debugger.rst:107 b27cd823e7334a1b86e9eaf6028c7b6e
msgid "交易上下文"
msgstr "Transaction Context"

#: ../../debugger.rst:109 3ccd834b6c28441bbd2ba5b023a06968
msgid ""
"交易上下文，即 **txContext** "
"参数，指定调试时当前交易的相关上下文信息，仅当在合约内进行签名或者原象校验时才需要。缺少会导致调试器无法进行校验。"
msgstr ""
"The transaction context, the **txContext** parameter, specifies the relevant"
" context information of the current transaction during debugging. It is only"
" needed when verifying signature or tx preimage in the contract. Missing it "
"will cause the debugger to fail to verify."

#: ../../debugger.rst:112 7880f20688424891bd0a1b1f2f210c2f
msgid "字段"
msgstr "Field"

#: ../../debugger.rst:114 acd376ade4e54338a7591f901102b3d0
msgid "hex"
msgstr "hex"

#: ../../debugger.rst:114 a0119d1dec32434681e3342533d04c59
msgid "序列化的当前交易，即解锁脚本所在交易。可以是签名过的，也可以是未签名的"
msgstr ""
"The serialized current transaction, that is, the transaction where the "
"unlock script is located. It can be signed or unsigned"

#: ../../debugger.rst:115 4899d54c46264f76bbaef898c39ac8d7
msgid "inputIndex"
msgstr "inputIndex"

#: ../../debugger.rst:115 ef7f99dc58fe4d728083d6ed292a6ac6
msgid "要花费的、被合约锁定的 UTXO 所对应的 input 索引"
msgstr ""
"The input index corresponding to the UTXO to be spent and locked by the "
"contract"

#: ../../debugger.rst:116 85d7591391b347dda4d94f51253a38e7
msgid "inputSatoshis"
msgstr "inputSatoshis"

#: ../../debugger.rst:116 0cae53139104411683b3ea3055bbf5ca
msgid "要花费的、被合约锁定的 UTXO 中比特币数量，单位 *satoshis*"
msgstr ""
"The amount of Bitcoin in UTXO to be spent and locked by the contract, in "
"*satoshis*"

#: ../../debugger.rst:117 4c48d718ade949e1859d61c6896afa94
msgid "opReturn"
msgstr "opReturn"

#: ../../debugger.rst:117 ddfa86efc07d4839b0f3f4017d38c192
msgid "有状态合约的状态，从OP_RETURN开始，不包含OP_RETURN，asm 格式"
msgstr ""
"The state of a stateful contract, starting from OP_RETURN, excluding "
"OP_RETURN, in asm format"

#: ../../debugger.rst:118 563cdc7704694635a38995d306650157
msgid "opReturnHex"
msgstr "opReturnHex"

#: ../../debugger.rst:118 ddfa86efc07d4839b0f3f4017d38c192
msgid "有状态合约的状态，从OP_RETURN开始，不包含OP_RETURN，hex 格式"
msgstr ""
"The state of a stateful contract, starting from OP_RETURN, excluding "
"OP_RETURN, in hex format"

#: ../../debugger.rst:123 ec949dcddee64dc2aa2692b93a037083
msgid "了解校验签名是如何运作的: `CHECKSIG`_"
msgstr "Understand how the verification signature works: `CHECKSIG`_"

#: ../../debugger.rst:127 65f381e9423d4e5096000292e63edf39
msgid "启动调试器"
msgstr "Launch the debugger"

#: ../../debugger.rst:129 1c262e45698341bba55751d326cd1316
msgid "启动调试器有4种方法："
msgstr "There are 4 ways to start the debugger:"

#: ../../debugger.rst:132 b591e469b1284707807abfc9b3f180ab
msgid "1. 通过 **F5** 启动"
msgstr "1. Start by **F5**"

#: ../../debugger.rst:134 631462f1bfab45cfa013c0a7f69907d9
msgid ""
"通过 **F5** 启动，需要先创建 好launch.json "
"并配置好启动参数。也可以通过调试视图的调试按钮来启动调试器。这是也是其它调试器最常见的启动方式。"
msgstr ""
"To start with **F5**, you need to create launch.json and configure the "
"startup parameters. You can also start the debugger through the debug button"
" in the debug view. This is also the most common way to start other "
"debuggers."

#: ../../debugger.rst:140 52be6a14e68746fb9e9ae6ef7b1d80ac
msgid "2. 通过 :ref:`单元测试 <Launch_Debugger_Link>` 启动"
msgstr "2. Start by :ref:`Testing <Launch_Debugger_Link>` "

#: ../../debugger.rst:143 a41276c248f949faa006c2d2c085612d
msgid "3. 通过 :ref:`Launch Debugger 命令 <Launch_Debugger_Command>` 启动"
msgstr "3. Start by :ref:`Launch Debugger command <Launch_Debugger_Command>`"

#: ../../debugger.rst:146 64e9a27750bb4579ba1f59956539ffa8
msgid "4. 通过 **Launch Debugger from TxContext** 命令 启动"
msgstr "4. Start by **Launch Debugger from TxContext** command"

#: ../../debugger.rst:148 68dcde62d10349a688ca1e16667c27ec
msgid ""
"**Launch Debugger from TxContext** 命令会打开一个调试器启动视图。允许你通过输入交易的 ``id`` 或者完整交易来 "
"``rawTx`` 来调试合约。 "
"你还可以选择调试主网或测试网上的交易，或者选择调试交易的哪一个输入，以及选择自动生成合约源代码或是附加一个已有的合约源码。自动生成的合约源码只包含 "
"`内联汇编`_。 如果附加的合约源代码不正确，则会选择自动生成合约源代码。"
msgstr ""
"The Launch Debugger from TxContext command will open a debugger startup "
"view. It allows you to debug a contract by entering the txid of the "
"transaction or the whole transaction in raw hex. You can choose to debug the"
" transaction on the mainnet or testnet, and which input to debug the "
"transaction. You can also choose to automatically generate the contract "
"source code in Script or attach an existing sCrypt contract. The "
"automatically generated contract source code only contains `Inline "
"Assembly`_. If the attached sCrypt contract mismatches with what is on "
"chain, the Script code will be automatically generated."

#: ../../debugger.rst:158 d449e85a555947fcaa406ae64237d32b
msgid "视频介绍： `4 种启动调试器的方法`_"
msgstr "Video introduction:  `4 ways to start the debugger`_"

#: ../../debugger.rst:163 32d122eb6a844c1a9a01db15c355d927
msgid "设置断点"
msgstr "Set breakpoint"

#: ../../debugger.rst:166 587f1aabe3ec4c0e84c2c2357944a1b4
msgid ""
"在启动调试器之前，首先设置断点。断点是可靠调试的最基本和最重要的功能，若代码编辑器中打开了文件，则可通过单击代码行左侧的边缘来设置断点，或者按 "
"**F9**。 接下来按 **F5** 或者 点击 **运行和调式** 侧边栏面板中的“开始调试”按钮，调试器将运行至它遇到的第一个断点。"
msgstr ""
"Before starting the debugger, first set a breakpoint. Breakpoint is a basic "
"and important function for debugging. If the file is opened in the code "
"editor, you can set the breakpoint by clicking the margin, or press **F9**. "
"Then press **F5** or click the \"Start Debugging\" button in the **Run and "
"Debug** sidebar panel, and the debugger will run to the first breakpoint it "
"hits."

#: ../../debugger.rst:173 2029631b330f497982a45fd915e1d757
msgid "单步执行"
msgstr "Step Over"

#: ../../debugger.rst:175 cc7555c2cb3c41b6901f0974f9cdbe85
msgid "调试器遇到断点后，就进入中断模式，脚本执行被挂起，而函数、变量和合约实例保留在栈中，接下来："
msgstr ""
"After the debugger hits a breakpoint, it enters the debug mode. Contract "
"execution is suspended. Functions, variables, and contract instances remain "
"on the stack. Next:"

#: ../../debugger.rst:177 b11df13abaf4493bab280896661e84eb
msgid "通过按 **F10** 或 **F11** 开始单步执行代码"
msgstr "Start stepping through the code by pressing **F10** or **F11**"

#: ../../debugger.rst:179 decd7613174a4a12b7ecb66eb06b52b6
msgid "通过打开右键菜单，选择 **运行到光标** 菜单"
msgstr "Open the right-click menu and select **Run to Cursor** menu"

#: ../../debugger.rst:181 a063fbd6da8c4f479543164bce20ee83
msgid "通过按 **F5** 执行到下一个断点"
msgstr "Execute to the next breakpoint by pressing **F5**"

#: ../../debugger.rst:183 5811af35975446eb94c0effc2a4d2c4c
msgid "通过按 **Shit + F11** 停止单步执行， 跳出当前函数"
msgstr ""
"By pressing **Shit + F11** to stop single step execution, jump out of the "
"current function"

#: ../../debugger.rst:185 d68c9eab71c541f99779674810c62b62
msgid ""
"在通过上述操作浏览代码时，左侧调试视图的中的 **变量面板** 和 **调用堆栈面板** 中的数据会实时地变化，如果在 **监视面板** "
"添加了表达式或者变量，将会实时地变化。"
msgstr ""
"When browsing the code in the above operations, the data in the **Variable "
"Panel** and **Call Stack Panel** in the debugging view on the left will "
"change in real time. If you add an expression or variable to the **Watch "
"Panel**, it will change in real time too."

#: ../../debugger.rst:190 c3897c9b72244ff29d45a664792aea54
msgid "一次调试只能以一个 *public* 函数为入口。"
msgstr ""
"Only one *public* function can be used as the entry point for debugging at a"
" time."

#: ../../debugger.rst:193 d9e905ffc1bd46abbb20dde3a038c254
msgid "调试操作"
msgstr "Debug Actions"

#: ../../debugger.rst:195 c9230269c4b14b9d804be2c51f05b096
msgid "调试会话开始后，调试工具栏将出现在代码编辑器的顶部。"
msgstr ""
"After the debugging session starts, the debugging toolbar will appear at the"
" top of the code editor."

#: ../../debugger.rst:201 469755e3f99e4612b2cd28996059c62c
msgid "继续/暂停 **F5**"
msgstr "Continue/Pause **F5**"

#: ../../debugger.rst:202 f0c78c884b0e49d68bc53635f521967a
msgid "单步跨过 **F10**"
msgstr "Step Over **F10**"

#: ../../debugger.rst:203 8302d1d6c2f3407d853838cfc6f143b1
msgid "单步跳入 **F11**"
msgstr "Step Into **F11**"

#: ../../debugger.rst:204 7a556a556970409a8e9c9d71a6492db0
msgid "单步跳出 **Shift+F11**"
msgstr "Step Out **Shift+F11**"

#: ../../debugger.rst:205 7c2b86cb884541459c59fb4c6c6e42ea
msgid "重启调试器 **Ctrl+Shift+F5**"
msgstr "Restart  **Ctrl+Shift+F5**"

#: ../../debugger.rst:206 93184b4c38d744bfa0f4009044255994
msgid "停止 **Shift+F5**"
msgstr "Stop **Shift+F5**"

#: ../../debugger.rst:210 858e6c5a10404876aada82506842ca2d
msgid "变量"
msgstr "Variable"

#: ../../debugger.rst:212 359b446fa5854bb98851d5b518ace593
msgid ""
"**变量面板** 主要显示两个域的变量： 当前函数和静态变量。 ``this`` 表示当前合约， 单击可展开查看合约的所有属性。 ``Statics``"
" 下则显示所有的静态变量。"
msgstr ""
"**Variable Panel** mainly displays variables in two scopes: current function"
" and static variables. ``this`` represents the current contract. Click to "
"expand to view all the properties of the contract. Under ``Statics``, all "
"static variables are displayed."

#: ../../debugger.rst:220 fd23fd9cf3c84a64bdadf7e63865ef5c
msgid "复制值"
msgstr "Copy Value"

#: ../../debugger.rst:222 a0c453c937bf420fb094147d26325ba2
msgid "在某个变量上右键单击，会出现 **Copy Value** 菜单，可以直接复制变量的值到剪切板中。"
msgstr ""
"Right-click on a variable, the **Copy Value** menu will appear, you can "
"directly copy the value of the variable to the clipboard."

#: ../../debugger.rst:229 e71709b3e01f4af991d29714a3075fc6
msgid "没有被引用到的静态变量不会出现在最后的脚本编译输出里，也不会在面板中显示。"
msgstr ""
"Static variables that are not referenced will not appear in the final script"
" compilation output, nor will they be displayed in the panel."

#: ../../debugger.rst:233 df6e9fe8d1404212b85295d085a01f0b
msgid "切换显示格式"
msgstr "Switch display format"

#: ../../debugger.rst:235 9a2a01ecbdca4bd1b474da361741375d
msgid ""
"在某个变量上右键单击，会出现 **Toggle showing bytes in hex or utf8 string** 和 **Toggle "
"showing int in hex or decimal** 菜单，点击菜单可以切换变量值的显示格式。"
msgstr ""
"Right-click on a variable, and the **Toggle showing bytes in hex or utf8 "
"string** and **Toggle showing int in hex or decimal** menus will appear. "
"Click the menu to switch the display format of the variable value."

#: ../../debugger.rst:243 e09841af481b491a89a645230aab3f03
msgid "改变一个变量的显示格式，其它类型相同的变量的显示格式也会跟着改变"
msgstr ""
"Change the display format of a variable, and the display format of other "
"variables of the same type will also change."

#: ../../debugger.rst:246 28c0834bc1364ba1a375c434690d431f
msgid "监视"
msgstr "Watch"

#: ../../debugger.rst:248 c4b7f56c703a4a128fd74b7ccf5e718d
msgid "可以在 **监视面板** 中添加变量和表达式。"
msgstr "You can add variables and expressions in the **Monitor Panel**."

#: ../../debugger.rst:254 16b37ba8a02d4fa99c0911181fcfc22f
msgid "调用堆栈"
msgstr "Call Stack"

#: ../../debugger.rst:256 0eeabfd32a1447dfa9e09f65870c6497
msgid ""
"使用“调用堆栈”面板可以查看当前被调用的所有函数。 “调用堆栈”窗口显示函数被调用的顺序。栈底是当前调试的 *public* 函数。 "
"单击“调用堆栈”上的函数名，代码编辑器会自动跳转到函数定义的位置。"
msgstr ""
"Use the \"Call Stack\" panel to view all functions currently being called. "
"The \"Call Stack\" window shows the order in which the functions are called."
" The bottom of the stack is the *public* function currently being debugged. "
"Click the function name on the \"Call stack\" and the code editor will "
"automatically jump to the location of the function definition."

#: ../../debugger.rst:265 216708e794d74eec949c14577644a5cf
msgid "调试控制台 (REPL)"
msgstr "Debug Console (REPL)"

#: ../../debugger.rst:274 fd23d60007a0471abf0a095c31e6bd34
msgid "异常"
msgstr "Exceptions"
